<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo + Github个人网页制作</title>
      <link href="/2024/03/04/1_2024-03-03-Hexo-+-Github%E4%B8%AA%E4%BA%BA%E7%BD%91%E9%A1%B5%E5%88%B6%E4%BD%9C/"/>
      <url>/2024/03/04/1_2024-03-03-Hexo-+-Github%E4%B8%AA%E4%BA%BA%E7%BD%91%E9%A1%B5%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p> 作为第一篇文章，就讲讲这个网站是怎么做的吧。 很早就有想做一个个人网站了，但是无奈不会的太多也就打消了这个念头。不然还得从头学一些奇奇怪怪的JavaScript和CSS相关的东西，这对我来说可就太折磨了。但是，昨天聊天时朋友提了一嘴：“你们没有个人作品集之类的东西吗？”， 我说还真没有，但是又突然想到了个人网站这种东西。想起本科时那些教授都有自己的网站，我就又去搜索了一下类似于“个人网站制作”的内容。 没想到居然有现成的库可以直接用，那就是Hexo了，甚至还配有各种主题（theme）。时过境迁，现在一切都变得那么容易，都可以一键生成。</p><p> 跟我说，谢谢你，开源侠。</p><h2 id="第一步：配置Github"><a href="#第一步：配置Github" class="headerlink" title="第一步：配置Github"></a>第一步：配置Github</h2><p>使用Github的原因很简单，对于个人用户它提供一个免费的user page，完全可以当个人网页用。</p><h3 id="注册Github"><a href="#注册Github" class="headerlink" title="注册Github"></a>注册Github</h3><p>此步略过</p><h3 id="本地生成id-rsa和id-rsa-pub"><a href="#本地生成id-rsa和id-rsa-pub" class="headerlink" title="本地生成id_rsa和id_rsa.pub"></a>本地生成id_rsa和id_rsa.pub</h3><p>打开一个CMD终端（或者windows下推荐使用Powershell），依次输入</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;Github用户名&quot;git config --global user.email &quot;Github邮箱&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;Github邮箱&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例如，我的github用户名是 <strong>zcpisme</strong>, 用 <strong><a href="mailto:&#x7a;&#x63;&#x70;&#105;&#115;&#x6d;&#101;&#x40;&#117;&#x63;&#104;&#x69;&#x63;&#x61;&#103;&#111;&#x2e;&#101;&#100;&#x75;">&#x7a;&#x63;&#x70;&#105;&#115;&#x6d;&#101;&#x40;&#117;&#x63;&#104;&#x69;&#x63;&#x61;&#103;&#111;&#x2e;&#101;&#100;&#x75;</a></strong>（我编的一个邮箱），则在CMD输入</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;zcpisme&quot;git config --global user.email &quot;zcpisme@uchicago.edu&quot;ssh-keygen -t rsa -C &quot; zcpisme@uchicago.edu&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>按回车，如遇到y&#x2F;n，输入y回车</p><p>结果如图</p><p><img src="/../images/1/1_rsakey.png"></p><p>将生成的id_rsa.pub用记事本打开复制内容（在我电脑里的位置是C:\Users\12427.ssh）</p><p><img src="/../images/1/1_rsakey2.png"></p><h3 id="链接Github账号"><a href="#链接Github账号" class="headerlink" title="链接Github账号"></a>链接Github账号</h3><p><img src="/../images/1/1_gitrsa.png"></p><p>github账号 —&gt; Settings —&gt;SSH and GPG keys — new SSH key</p><p><img src="/../images/1/1_gitrsa2.png"></p><p><img src="/../images/1/1_gitrsa3.png"></p><p>title任意（建议你的邮箱），key粘贴刚才复制的id_rsa.pub里的内容。</p><p>自此，Github连接完成。</p><h3 id="新建一个名为username-github-io的repository"><a href="#新建一个名为username-github-io的repository" class="headerlink" title="新建一个名为username.github.io的repository"></a>新建一个名为username.github.io的repository</h3><p>在右上角的加号处，点击New repository</p><p><img src="/../images/1/1_gitio.png"></p><p>repository name 输入 “你的用户名.github.io” <strong>!!! 重要，一定是你的username.github.io，且一人只能存在一个这样的repository，且设为public</strong>， 点击下方create repository</p><p><img src="/../images/1/1_gitio2.png"></p><p>自此，github配置完成</p><h2 id="第一点五步：拥有node-js"><a href="#第一点五步：拥有node-js" class="headerlink" title="第一点五步：拥有node.js"></a>第一点五步：拥有node.js</h2><p>有人要骂了，说哎呀zcp怎么这么啰嗦，这还有个一点五步，还不好好打1.5。我说停停，我的目的是手把手教学，我也怕我以后忘了从头开始整理网上的教程，所以还是啰嗦点好。但对于这部分也只是告诉大家要有这么一部分，并不会在这里细讲。</p><p>node.js是一个JavaScript运行环境，我们之后的配置离不开这玩意。</p><p>安装教程参考：</p><p><a href="https://nodejs.org/en">https://nodejs.org/en</a></p><p><a href="https://www.runoob.com/nodejs/nodejs-install-setup.html">https://www.runoob.com/nodejs/nodejs-install-setup.html</a></p><p>其实就把msi镜像文件下载安装就好了。</p><p>安装成功后，可在cmd输入查看安装是否成功</p><pre class="line-numbers language-none"><code class="language-none">npm -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/1/1_nodejs.png"></p><h2 id="第二步：第一个Hexo个人网页"><a href="#第二步：第一个Hexo个人网页" class="headerlink" title="第二步：第一个Hexo个人网页"></a>第二步：第一个Hexo个人网页</h2><p>来力！有了以上的配置，接下来的一切都变得傻瓜了起来，既不用自己手搓网页，也不需要什么编程知识。</p><p>在上半步之后，我们可以用 <strong>npm</strong> 来管理node.js里的安装包。</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>输入以下指令即可，</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><p>例如我想在D:\desktop\campus\personalBlog下， 创建一个文件夹叫myFirstBlog用来管理我的网页，在cmd里进入此文件夹：</p><p><img src="/../images/1/1_enterfolder.png"></p><p>输入</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">hexo init myFirstBlog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到</p><p><img src="/../images/1/1_enterfolder2.png"></p><p>myFirstBlog已被创建。</p><h3 id="打开个人网页"><a href="#打开个人网页" class="headerlink" title="打开个人网页"></a>打开个人网页</h3><p>在刚才创建的文件夹里，启动服务</p><pre class="line-numbers language-none"><code class="language-none">hexo -s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/1/1_starthexo.png"></p><p>也可以如图 hexo -s -p 4001来指定端口用来调试多个网址（默认端口为4000）。</p><p>复制 <a href="http://localhost:4000/%E5%88%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%EF%BC%8C%E5%8D%B3%E5%8F%AF%EF%BC%88%E6%9C%AC%E5%9C%B0%EF%BC%89%E9%A2%84%E8%A7%88%E3%80%82">http://localhost:4000/到浏览器中，即可（本地）预览。</a></p><p><strong>于是，恭喜！你有了自己的网页！</strong><img src="/../images/1/1_starthexo2.png"></p><h2 id="第三步：-稍微等一下（发布到Github）"><a href="#第三步：-稍微等一下（发布到Github）" class="headerlink" title="第三步： 稍微等一下（发布到Github）"></a>第三步： 稍微等一下（发布到Github）</h2><p>当然，我们不能仅限于本地预览，我们需要将我们的网页发到公网上，所有人都可以预览，于是要如下配置。</p><h3 id="config-yml配置文件"><a href="#config-yml配置文件" class="headerlink" title="_config.yml配置文件"></a>_config.yml配置文件</h3><p>在刚才的myFirstBlog文件夹下，有一个名为_config.yml的文件，用记事本打开。拉到最底下#Deployment处， type为git， repo更改为最开始repository的网址+.git，branch为master例如：</p><pre class="line-numbers language-none"><code class="language-none"># Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;one-command-deploymentdeploy:  type: git  repo: https:&#x2F;&#x2F;github.com&#x2F;zcpisme&#x2F;zcpisme.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>最后一步了，在cmd中（依旧进入到myFirstBlog文件夹里），输入</p><pre class="line-numbers language-none"><code class="language-none">hexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>即可等待文件上传至GitHub，几分钟后，username.github.io 就是你的个人网页了！</p><p><img src="/../images/1/1_gitiofinal.png"></p><p>是不是as ez as ABC~</p><h3 id="hexo常用指令"><a href="#hexo常用指令" class="headerlink" title="hexo常用指令"></a>hexo常用指令</h3><pre class="line-numbers language-none"><code class="language-none">hexo init [folder] #初始化hexohexo new [layout] &lt;title&gt; #新建新文章，所有文章需要为markdown（.md）格式hexo generate #生成静态文件，同 hexo ghexo server #启动本地服务， 同hexo shexo deploy #部署网页， 同hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h3><p>在个人的使用中，一次次更改部署，一条条指令输入过于繁琐（甚至会漏掉某一条），所以可以创建一个sh脚本，每次跑一遍就好了。</p><p>例如，在myFirstBlog文件夹里，新建记事本，输入</p><pre class="line-numbers language-none"><code class="language-none">#!&#x2F;bin&#x2F;bash# Stop script on any errorset -e# Navigate to the Hexo project directory (if not already there)# Clean the public directoryecho &quot;Cleaning...&quot;hexo clean# Generate static filesecho &quot;Generating...&quot;hexo generate# Deploy to the serverecho &quot;Deploying...&quot;hexo deployecho &quot;Deployment successful!&quot;echo &quot;Press enter to close&quot;read -r<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更改文件名为deploy.sh， 在每次部署前输入</p><pre class="line-numbers language-none"><code class="language-none">.&#x2F;deploy.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可</p><h2 id="第？步：稍微等两下（可选）"><a href="#第？步：稍微等两下（可选）" class="headerlink" title="第？步：稍微等两下（可选）"></a>第？步：稍微等两下（可选）</h2><p>想必有朋友非常之激动的打开了网页，一顿欣赏。而后发现网页设计是如此的单调，心中暗骂：”这不坑人吗，果然便宜没好货。” zcp在屏幕前打了两个喷嚏，再说了一次停停。</p><p>当然不是，真正精彩的地方来了，世界上用爱发电的人如此多，以至于hexo也拥有种类繁多的主题可供挑选。</p><p>此处<a href="https://hexo.io/themes/index.html">Hexo主题</a> 可以挑选心仪的主题，从简朴风到二刺螈应有尽有。目前，网上<a href="https://theme-next.js.org/docs/">NexT</a>主打一个简朴以及有极多的插件可自定义。这里，我们选用<a href="https://github.com/blinkfox/hexo-theme-matery?tab=readme-ov-file">hexo-theme-matery</a>， 一个非常漂亮的主题，再一次，感谢开源侠，感谢<a href="https://github.com/blinkfox">闪烁之狐 (blinkfox)</a>。</p><p>选好主题后，下载源文件（git clone），将下载的文件拷贝至myFirstBlog下的<strong>themes</strong>文件夹。</p><p>同样，在_config.yml配置文件里，更改 theme为刚才下载的文件夹名，例如</p><pre class="line-numbers language-none"><code class="language-none"># Extensions## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;theme: hexo-theme-matery<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>再次发布，可以看到网页主题变得奢华了起来。通常，每个主题有自己详细的文档。</p><h2 id="本篇结尾"><a href="#本篇结尾" class="headerlink" title="本篇结尾"></a>本篇结尾</h2><p>自己探索一个未知的事物是快乐的，并且在一次次试错最后成功时，内心是极其愉悦的。</p><p>感谢阅读我的第一篇文章，请多包涵，并欢迎提出建议！</p><p>下一篇我们来谈谈我对matery这个主题的一些额外设置。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/03/03/hello-world/"/>
      <url>/2024/03/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
